% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/render_changes.R
\name{render_changes}
\alias{render_changes}
\title{Render changes as HTML}
\usage{
render_changes(text = NULL, file = NULL, ...)
}
\arguments{
\item{text}{The markdown as a character vector with a single value (i.e. not
one value per line). Either `text` or `file` must be used, but not both.}

\item{file}{The file containing the markdown to be rendered. Either `text` or
`file` must be used, but not both.}

\item{...}{Arguments passed on to \code{rmarkdown::render}
\describe{
  \item{input}{Input file (R script, Rmd, or plain markdown).}
  \item{output_format}{R Markdown output format to convert to. Pass
  \code{"all"} to render all formats defined within the file. Pass
  the name of a format (e.g. \code{"html_document"}) to render a single
  format or pass a vector of format names to render multiple formats.
  Alternatively you can pass an output format object;
  e.g. \code{html_document()}. If \code{NULL} is passed then the
  output format is the first one defined in the YAML metadata of the
  input file (defaulting to HTML if none is specified).}
  \item{output_options}{List of output options that can override the options
  specified in metadata (e.g. could be used to force \code{self_contained} or
  \code{mathjax = "local"}). Note that this is only valid when the output
  format is read from metadata (i.e. not a custom format object passed to
  \code{output_format}).}
  \item{output_file}{Output file. If \code{NULL} then a default based on
  the name of the input file is chosen.}
  \item{output_dir}{Output directory. An alternate directory to write
  the output file to (defaults to the directory of the input file).}
  \item{intermediates_dir}{Intermediate files directory. If \code{NULL},
  intermediate files are written to the same directory as the input file;
  otherwise.}
  \item{knit_root_dir}{The working directory in which to knit the document; uses
  knitr's \code{root.dir} knit option. \code{NULL} means to follow the knitr
  default, which is to use the parent directory of the document.}
  \item{runtime}{The runtime target for rendering. \code{static} produces output
  intended for static files; \code{shiny} produces output suitable for use in a
  Shiny document (see \code{\link{run}}). The default, \code{auto},
  allows the \code{runtime} target specified in the YAML metadata to take
  precedence, and renders for a \code{static} runtime target otherwise.}
  \item{clean}{\code{TRUE} to clean intermediate files created
  during rendering.}
  \item{params}{List of named parameters that override custom params
  specified within the YAML front-matter (e.g. specifying a dataset to
  read or a date range to confine output to). Pass \code{"ask"} to start
  an application that helps guide parameter configuration.}
  \item{knit_meta}{(For expert use) Meta data generated by \pkg{knitr}.}
  \item{envir}{The environment in which the code chunks are
  to be evaluated during knitting (can use
  \code{\link{new.env}()} to guarantee an empty new
  environment).}
  \item{run_pandoc}{Whether to run Pandoc to convert Markdown output.}
  \item{quiet}{\code{TRUE} to suppress printing of the
  pandoc command line.}
  \item{encoding}{The encoding of the input file; see
  \code{\link{file}}.}
}}
}
\description{
Makes and HTML rendering of the track changes markup in markdown.
}
\keyword{internal}
